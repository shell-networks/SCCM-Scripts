<#
    .NOTES
    --------------------------------------------------------------------------------
    Code generated by:  Hands
    Generated on:       13/05/2018
    Generated by:       Guillaume Mateos
    Organization:       SHell Networks
    --------------------------------------------------------------------------------
    .SYNOPSIS
    Use this script to create all usefull groups and users for SCCM
    .DESCRIPTION
    1 - Creation of groups
    2 - Creation of users
    3 - Users in the groups 
#>

#region Modules
Import-Module ActiveDirectory
#endregion

#region Variables

$GroupsNamingConvention = "SHN-GG-"
$AccountsNamingConvention = "shn-svc-"
$SccmUsersPath = "OU=Services accounts,OU=Users,OU=1 - Admins Users and Groups,OU=AGEN,OU=Shell-networks,DC=shell-networks,DC=local" #Path where users are going to be created within AD
$SccmGroupsPath = "OU=Groups,OU=1 - Admins Users and Groups,OU=AGEN,OU=Shell-networks,DC=shell-networks,DC=local" #Path where groups are going to be created within AD

#endregion

#region Functions

function Set-SccmUsersAndGroups
{

    <#
        .SYNOPSIS
        Use this to create users and groups that SCCM will need
        .DESCRIPTION
        Use this to create users and groups that SCCM will need
        .PARAMETER SccmUsersPath
        DN of the AD path where users will be created
        .PARAMETER SccmGroupsPath
        DN of the AD path where groups will be created
        .PARAMETER AccountsNamingConvention
        Naming convention to add before the username
        .PARAMETER GroupsNamingConvention
        Naming convention to add before the group name
        .EXAMPLE
        Set-SccmUsersAndGroups -SccmUsersPath -SccmGroupsPath -AccountsNamingConvention -GroupsNamingConvention
    #>
    [Cmdletbinding()]
    Param (
    [Parameter(Mandatory = $True,Position = 0)]
    [String]
    $SccmUsersPath,
    [Parameter(Mandatory = $True,Position = 1)]
    [String]
    $SccmGroupsPath,
    [Parameter(Mandatory = $True,Position = 2)]
    [String]
    $AccountsNamingConvention,
    [Parameter(Mandatory = $True,Position = 3)]
    [String]
    $GroupsNamingConvention
    ) 

    $SccmAccounts = @("SCCM-SQLService","SCCM-NAA","SCCM-ClientPush","SCCM-SQLReporting","SCCM-DomainJoin")
    $SccmGroups = @("SCCM-Admins","SCCM-SiteServers")

    foreach($Account in $SccmAccounts)
    {
        $Account = "$($AccountsNamingConvention)$($Account)"#Here we respect naming convention for accounts

        Write-Host -ForegroundColor Cyan "Creating account $($Account)"

        $Create = $True
        try 
        {
            New-ADUser -Name $Account -Path $SccmUsersPath
        }
        catch 
        {
            $Create = $false
        }

        if($Create)
        {
            Write-Host -ForegroundColor Green "$($Account) created"
        }
        else 
        {
            
        }
     
    }
}

#endregion

#region script

Set-SccmUsersAndGroups -SccmUsersPath $SccmUsersPath -SccmGroupsPath $SccmGroupsPath `
-AccountsNamingConvention $AccountsNamingConvention -GroupsNamingConvention $GroupsNamingConvention

#endregion